syntax = "proto3";

// import "google/protobuf/timestamp.proto";

package replit.river.test;

enum RpcEnum {
  ZERO = 0;
  ONE = 1;
  TWO = 2;
}

message RpcMessage {
  string payload = 1;
}

message RpcRequest {
  // These are all the types in https://github.com/protocolbuffers/protobuf/blob/4eeaa22312a6e8f99ec5862155a52c55f16e0f5c/src/google/protobuf/descriptor.proto#L219
  oneof request {
    double double = 1;
    float float = 2;
    int64 int64 = 3;
    uint64 uint64 = 4;
    int32 int32 = 5;
    fixed64 fixed64 = 6;
    fixed32 fixed32 = 7;
    bool bool = 8;
    string string = 9;
    // No group.
    RpcMessage message = 11;
    bytes bytes = 12;
    uint32 uint32 = 13;
    RpcEnum enum = 14;
    sfixed32 sfixed32 = 15;
    sfixed64 sfixed64 = 16;
    sint32 sint32 = 17;
    sint64 sint64 = 18;
  }
}

message RpcResponse {
  string payload = 1;
}

message StreamRequest {
  // TODO: timestamp is causing grpc generated files fail in tests.
  // google.protobuf.Timestamp timestamp = 1;
  string payload = 2;
}

message StreamResponse {
  // google.protobuf.Timestamp timestamp = 1;
  string payload = 2;
}

service Test {
  rpc rpc (RpcRequest) returns (RpcResponse);
  rpc stream (stream StreamRequest) returns (stream StreamResponse);
}