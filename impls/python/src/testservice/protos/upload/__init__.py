# Code generated by river.codegen. DO NOT EDIT.
import datetime  # noqa: F401
from collections.abc import AsyncIterable, AsyncIterator  # noqa: F401
from typing import Any

import replit_river as river
from pydantic import TypeAdapter  # noqa: F401
from replit_river.error_schema import RiverError, RiverErrorTypeAdapter

from .send import SendInput, SendInputTypeAdapter, SendOutput, SendOutputTypeAdapter


class UploadService:
    def __init__(self, client: river.Client[Any]):
        self.client = client

    async def send(
        self,
        inputStream: AsyncIterable[SendInput],
    ) -> SendOutput | RiverError:
        return await self.client.send_upload(
            "upload",
            "send",
            None,
            inputStream,
            None,
            lambda x: SendInputTypeAdapter.dump_python(
                x,  # type: ignore[arg-type]
                by_alias=True,
                exclude_none=True,
            ),
            lambda x: SendOutputTypeAdapter.validate_python(
                x  # type: ignore[arg-type]
            ),
            lambda x: RiverErrorTypeAdapter.validate_python(
                x  # type: ignore[arg-type]
            ),
        )
