# Code generated by river.codegen. DO NOT EDIT.
import datetime  # noqa: F401
from collections.abc import AsyncIterable, AsyncIterator
from typing import Any

import replit_river as river
from pydantic import TypeAdapter
from replit_river.error_schema import RiverError, RiverErrorTypeAdapter

from .echo import EchoInput, EchoInputTypeAdapter, EchoOutput, EchoOutputTypeAdapter
from .echo_prefix import (
    Echo_PrefixInit,
    Echo_PrefixInput,
    Echo_PrefixInputTypeAdapter,
    Echo_PrefixOutput,
    Echo_PrefixOutputTypeAdapter,
)

Echo_PrefixInitTypeAdapter: TypeAdapter[Echo_PrefixInit] = TypeAdapter(Echo_PrefixInit)


class RepeatService:
    def __init__(self, client: river.Client[Any]):
        self.client = client

    async def echo(
        self,
        inputStream: AsyncIterable[EchoInput],
    ) -> AsyncIterator[EchoOutput | RiverError | RiverError]:
        return self.client.send_stream(
            "repeat",
            "echo",
            None,
            inputStream,
            None,
            lambda x: EchoInputTypeAdapter.dump_python(
                x,  # type: ignore[arg-type]
                by_alias=True,
                exclude_none=True,
            ),
            lambda x: EchoOutputTypeAdapter.validate_python(
                x  # type: ignore[arg-type]
            ),
            lambda x: RiverErrorTypeAdapter.validate_python(
                x  # type: ignore[arg-type]
            ),
        )

    async def echo_prefix(
        self,
        init: Echo_PrefixInit,
        inputStream: AsyncIterable[Echo_PrefixInput],
    ) -> AsyncIterator[Echo_PrefixOutput | RiverError | RiverError]:
        return self.client.send_stream(
            "repeat",
            "echo_prefix",
            init,
            inputStream,
            lambda x: Echo_PrefixInitTypeAdapter.validate_python(x),
            lambda x: Echo_PrefixInputTypeAdapter.dump_python(
                x,  # type: ignore[arg-type]
                by_alias=True,
                exclude_none=True,
            ),
            lambda x: Echo_PrefixOutputTypeAdapter.validate_python(
                x  # type: ignore[arg-type]
            ),
            lambda x: RiverErrorTypeAdapter.validate_python(
                x  # type: ignore[arg-type]
            ),
        )
